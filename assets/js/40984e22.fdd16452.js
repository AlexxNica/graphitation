"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[613],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),l=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return i.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,b=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return n?i.createElement(b,o(o({ref:t},u),{},{components:n})):i.createElement(b,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3859:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return u},default:function(){return f}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=["components"],s={sidebar_position:7,id:"use-subscription",title:"useSubscription",slug:"/api-reference/use-subscription/",description:"API reference for useSubscription, a React hook used to subscribe and unsubscribe from a subscription",keywords:["subscription"]},p=void 0,l={unversionedId:"apollo-react-relay-duct-tape/use-subscription",id:"apollo-react-relay-duct-tape/use-subscription",title:"useSubscription",description:"API reference for useSubscription, a React hook used to subscribe and unsubscribe from a subscription",source:"@site/docs/apollo-react-relay-duct-tape/use-subscription.md",sourceDirName:"apollo-react-relay-duct-tape",slug:"/api-reference/use-subscription/",permalink:"/graphitation/docs/api-reference/use-subscription/",editUrl:"https://github.com/microsoft/graphitation/tree/main/website/docs/apollo-react-relay-duct-tape/use-subscription.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,id:"use-subscription",title:"useSubscription",slug:"/api-reference/use-subscription/",description:"API reference for useSubscription, a React hook used to subscribe and unsubscribe from a subscription",keywords:["subscription"]},sidebar:"tutorialSidebar",previous:{title:"useMutation",permalink:"/graphitation/docs/api-reference/use-mutation/"}},u=[{value:"<code>useSubscription</code>",id:"usesubscription",children:[{value:"Arguments",id:"arguments",children:[{value:"Type <code>GraphQLSubscriptionConfig&lt;TSubscriptionPayload&gt;</code>",id:"type-graphqlsubscriptionconfigtsubscriptionpayload",children:[],level:4}],level:3},{value:"Flow Type Parameters",id:"flow-type-parameters",children:[],level:3},{value:"Behavior",id:"behavior",children:[],level:3}],level:2}],c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},d=c("FbInternalOnly"),m=c("DocsRating"),b={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"usesubscription"},(0,a.kt)("inlineCode",{parentName:"h2"},"useSubscription")),(0,a.kt)("p",null,"Hook used to subscribe and unsubscribe to a subscription."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {graphql, useSubscription} from 'react-relay';\nimport {useMemo} from 'react';\n\nconst subscription = graphql`\n  subscription UserDataSubscription($input: InputData!) {\n    # ...\n  }\n`;\n\nfunction UserComponent({ id }) {\n  // IMPORTANT: your config should be memoized.\n  // Otherwise, useSubscription will re-render too frequently.\n  const config = useMemo(() => ({\n    variables: {id},\n    subscription,\n  }), [id, subscription]);\n\n  useSubscription(config);\n\n  return (/* ... */);\n}\n")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"config"),": a config of type ",(0,a.kt)("a",{parentName:"li",href:"#type-graphqlsubscriptionconfigtsubscriptionpayload"},(0,a.kt)("inlineCode",{parentName:"a"},"GraphQLSubscriptionConfig"))," passed to ",(0,a.kt)("a",{parentName:"li",href:"../request-subscription/"},(0,a.kt)("inlineCode",{parentName:"a"},"requestSubscription"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"requestSubscriptionFn"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"?<TSubscriptionPayload>(IEnvironment, GraphQLSubscriptionConfig<TSubscriptionPayload>) => Disposable"),". An optional function with the same signature as ",(0,a.kt)("a",{parentName:"li",href:"../request-subscription/"},(0,a.kt)("inlineCode",{parentName:"a"},"requestSubscription")),", which will be called in its stead. Defaults to ",(0,a.kt)("inlineCode",{parentName:"li"},"requestSubscription"),".")),(0,a.kt)("h4",{id:"type-graphqlsubscriptionconfigtsubscriptionpayload"},"Type ",(0,a.kt)("inlineCode",{parentName:"h4"},"GraphQLSubscriptionConfig<TSubscriptionPayload>")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An object with the following fields:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cacheConfig"),": ",(0,a.kt)("em",{parentName:"li"},(0,a.kt)("em",{parentName:"em"},"[Optional]"))," ",(0,a.kt)("a",{parentName:"li",href:"#type-cacheconfig"},(0,a.kt)("inlineCode",{parentName:"a"},"CacheConfig"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"subscription"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"GraphQLTaggedNode"),". A GraphQL subscription specified using a ",(0,a.kt)("inlineCode",{parentName:"li"},"graphql")," template literal"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"variables"),": The variables to pass to the subscription"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onCompleted"),": ",(0,a.kt)("em",{parentName:"li"},(0,a.kt)("em",{parentName:"em"},"[Optional]"))," ",(0,a.kt)("inlineCode",{parentName:"li"},"() => void"),". An optional callback that is executed when the subscription is established"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onError"),": ",(0,a.kt)("em",{parentName:"li"},(0,a.kt)("em",{parentName:"em"},"[Optional]"))," ",(0,a.kt)("inlineCode",{parentName:"li"},"(Error) => {}"),". An optional callback that is executed when an error occurs"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onNext"),": ",(0,a.kt)("em",{parentName:"li"},(0,a.kt)("em",{parentName:"em"},"[Optional]"))," ",(0,a.kt)("inlineCode",{parentName:"li"},"(TSubscriptionPayload) => {}"),". An optional callback that is executed when new data is received"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"updater"),": ",(0,a.kt)("em",{parentName:"li"},(0,a.kt)("em",{parentName:"em"},"[Optional]"))," ",(0,a.kt)("a",{parentName:"li",href:"#type-selectorstoreupdater"},(0,a.kt)("inlineCode",{parentName:"a"},"SelectorStoreUpdater")),".")))),(0,a.kt)("h3",{id:"flow-type-parameters"},"Flow Type Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TSubscriptionPayload"),": The type of the payloads vended by the subscription. You should pass the flow type imported from the auto-generated ",(0,a.kt)("inlineCode",{parentName:"li"},".graphql")," file corresponding to the subscription, e.g. use ",(0,a.kt)("inlineCode",{parentName:"li"},"UserDataSubscription")," as the type parameter, from ",(0,a.kt)("inlineCode",{parentName:"li"},"import type {UserDataSubscription} from './__generated__/UserDataSubscription.graphql'"),";")),(0,a.kt)("h3",{id:"behavior"},"Behavior"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This is only a thin wrapper around the ",(0,a.kt)("inlineCode",{parentName:"li"},"requestSubscription")," API. It will:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Subscribe when the component is mounted with the given config"),(0,a.kt)("li",{parentName:"ul"},"Unsubscribe when the component is unmounted"),(0,a.kt)("li",{parentName:"ul"},"Unsubscribe and resubscribe with new values if the environment, config or ",(0,a.kt)("inlineCode",{parentName:"li"},"requestSubscriptionFn")," changes."))),(0,a.kt)("li",{parentName:"ul"},"If you have the need to do something more complicated, such as imperatively requesting a subscription, please use the ",(0,a.kt)("a",{parentName:"li",href:"../request-subscription/"},(0,a.kt)("inlineCode",{parentName:"a"},"requestSubscription"))," API directly."),(0,a.kt)("li",{parentName:"ul"},"See the ",(0,a.kt)("a",{parentName:"li",href:"../../guided-tour/updating-data/graphql-subscriptions/"},"GraphQL Subscriptions Guide")," for a more detailed explanation of how to work with subscriptions.")),(0,a.kt)(d,{mdxType:"FbInternalOnly"},(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("inlineCode",{parentName:"p"},"useSubscription")," doesn't automatically add ",(0,a.kt)("inlineCode",{parentName:"p"},"client_subscription_id"),". You may need to provide an arbitrary ",(0,a.kt)("inlineCode",{parentName:"p"},"client_subscription_id")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"config.variables.input"))))),(0,a.kt)(m,{mdxType:"DocsRating"}))}f.isMDXComponent=!0}}]);